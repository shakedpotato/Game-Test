// ===============================================================================================                                        
// 概要:                                                                             
//                                                                                              
// 作成日 XX/XX/XXXX Author: Hashimoto Yuto                                       
// ===============================================================================================

// -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
// 
// インクルードファイル
// 
// -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

#include "OrderedSingleton.h"
#include <vector>


// -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
//
// クラス: GameSystemFinalizer
//
// -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-

std::list<OrderedSingletonFinalizer::FinalizerFunc> OrderedSingletonFinalizer::m_Finalizers;

/* ----- GameSystemFinalizer::AddFinalizer ------------------------------------------- */
/* 概要  : GameSystem型の自身を殺す関数を登録する。                                    */
/*         GameSystem型以外が呼ぶことはない。                                          */
/* 戻り値: なし                                                                        */
/* 引数0 : FinalizerFunc 自身を殺す関数                                                */
/* ----------------------------------------------------------------------------------- */
void OrderedSingletonFinalizer::AddFinalizer(FinalizerFunc func)
{
	m_Finalizers.push_back(func);
}

/* ----- GameSystemFinalizer::Finalize ----------------------------------------------- */
/* 概要  :タイマーのリセット                                                           */
/* 戻り値: なし                                                                        */
/* ----------------------------------------------------------------------------------- */
void OrderedSingletonFinalizer::FinalizeAll(void)
{
	// 登録された順と逆順で終了処理を行う
	auto itr = m_Finalizers.end();

	while (itr != m_Finalizers.begin())
	{
		--itr;
		(*itr)();
	}

	m_Finalizers.clear();
}

